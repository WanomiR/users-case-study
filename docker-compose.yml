services:
  userservice:
    build:
      ./userservice
    ports:
      - 8888:8888
    depends_on:
      - redis
    restart: always
    environment:
      APP_VERSION: ${APP_VERSION}
      HOST: ${HOST}
      PORT: ${PORT}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_PORT: ${DB_PORT}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB_NAME: ${DB_NAME}

  redis:
    image: redis:latest
    restart: always

  postgres:
    image: postgres:alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./postgres/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
    restart: always

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - userservice
    restart: always

  grafana:
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
    volumes:
      - ./grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ./grafana/dashboard.yml:/etc/grafana/provisioning/dashboards/main.yml
      - ./grafana/dashboard.json:/etc/dashboards/dashboard.json
      - ./grafana:/var/lib/grafana
    depends_on:
      - prometheus
    restart: always

volumes:
  grafana: